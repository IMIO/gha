name: Trigger repository dispatch and notify on Mattermost
description: Trigger a repository dispatch event and optionally notify on Mattermost
inputs:
  REPOSITORY:
    description: 'Repository to trigger the dispatch event'
    required: true
  GIT_REFERENCE:
    description: 'Reference to trigger the event on'
    required: false
    default: 'main'
  WORKFLOW_FILENAME:
    description: 'Filename of the workflow to trigger'
    required: true
  EVENT_TYPE:
    description: 'Type of event to trigger'
    required: true
  CLIENT_PAYLOAD:
    description: 'Client payload to send with the event'
    required: false
  APP_ID:
    description: 'GitHub App ID'
    required: true
  APP_PRIVATE_KEY:
    description: 'GitHub App private key'
    required: true
  REPOSITORY_OWNER:
    description: 'Owner of the repository'
    required: true
  MATTERMOST_WEBHOOK_URL:
    description: 'Webhook URL to send notifications on Mattermost, if not provided, notifications will not be sent'
    required: false
runs:
  using: 'composite'
  steps:
  - name: Install curl
    run: |
      if which curl > /dev/null ; then
        echo "curl is already installed"
      else
        sudo apt-get update && sudo apt-get install -y curl
      fi
    shell: bash
  - uses: actions/create-github-app-token@v1
    id: app-token
    with:
      app-id: ${{ inputs.APP_ID }}
      private-key: ${{ inputs.APP_PRIVATE_KEY }}
      owner: ${{ inputs.REPOSITORY_OWNER}}
  - name: Trigger repository dispatch
    run: |
      curl -L \
      --fail-with-body \
      -X POST \
      -H "Accept: application/vnd.github+json" \
      -H "Authorization: Bearer ${{ steps.app-token.outputs.token }}" \
      -H "X-GitHub-Api-Version: 2022-11-28" \
      https://api.github.com/repos/${{ inputs.REPOSITORY_OWNER}}/${{ inputs.REPOSITORY }}/actions/workflows/${{ inputs.WORKFLOW_FILENAME }}/dispatches \
      -d '{"ref": "${{ inputs.GIT_REFERENCE }}"}'
    shell: bash
  - name : Send notification on Mattermost
    if: ${{ inputs.MATTERMOST_WEBHOOK_URL != '' }}
    uses: IMIO/gha/mattermost-notify@v4
    with:
      MATTERMOST_WEBHOOK_URL: ${{ inputs.MATTERMOST_WEBHOOK_URL }}
      MESSAGE: "Theme has been successfully uploaded to Plone site ${{ inputs.PLONE_URL }}"
  - name : Send failure notification on Mattermost
    if: ${{ failure() && inputs.MATTERMOST_WEBHOOK_URL != '' }}
    uses: IMIO/gha/mattermost-notify@v4
    with:
      MATTERMOST_WEBHOOK_URL: ${{ inputs.MATTERMOST_WEBHOOK_URL }}
      MESSAGE: "An error has been encountered while uploading theme to Plone site ${{ inputs.PLONE_URL }}"
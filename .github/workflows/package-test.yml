name: Test package

on:
  workflow_call:
    inputs:
      branch_name:
        description: 'Branch name'
        type: string
        required: false
      python_version:
        description: 'Python version'
        required: false
        type: string
        default: "2.7"
      plone_version:
        description: 'Plone version'
        required: false
        type: string
        default: "4.3"
      matrix_experimental:
        description: 'Experimental matrix'
        type: boolean
        required: false
        default: false
      runner_label:
        description: 'Runner label'
        type: string
        required: false
        default: "gha-runners-delib-py2"
      soffice:
        description: 'Launch soffice'
        required: false
        type: boolean
        default: true
      test_command:
        description: 'Test command'
        required: false
        type: string
        default: 'bin/test'
      install_dependencies_commands:
        description: 'Install dependencies commands'
        required: false
        type: string
        default: 'sudo pip install -r requirements-tests.txt'
    secrets:
        mattermost_webhook_url:
          description: 'Webhook URL to send notifications on Mattermost, if not provided, notifications will not be sent'
          required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Parse versions
        id: set-matrix
        run: |
          IFS=',' read -r -a python_versions <<< "${{ inputs.python_version }}"
          python_versions_json=$(printf '%s\n' "${python_versions[@]}" | jq -R . | jq -s .)

          IFS=',' read -r -a plone_versions <<< "${{ inputs.plone_version }}"
          plone_versions_json=$(printf '%s\n' "${plone_versions[@]}" | jq -R . | jq -s .)

          echo "matrix={\"python\": $python_versions_json, \"plone\": $plone_versions_json}" >> $GITHUB_ENV
          echo "::set-output name=matrix::{\"python\": $python_versions_json, \"plone\": $plone_versions_json}"
  test:
    needs: generate-matrix
    runs-on: ${{ inputs.runner_label }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    if: ${{ !github.event_name == 'pull_request' || !github.event.pull_request.draft }}
    steps:
      - name: Launch soffice
        if: ${{ inputs.soffice }}
        run: soffice '--accept=socket,host=0.0.0.0,port=2002;urp;StarOffice.ServiceManager' --nologo --headless --nofirststartwizard --norestore &
        shell: bash
      - name: Run tests
        uses: IMIO/gha/plone-package-test-notify@v4
        env:
          cache-name: cache-eggs
          PM_BRANCH_NAME: ${{ inputs.branch_name || 'master' }}
        with:
          CACHE_KEY: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}
          TEST_COMMAND: ${{ inputs.test_command }}
          INSTALL_DEPENDENCIES_COMMANDS: |
            ${{ inputs.install_dependencies_commands }}
          MATTERMOST_WEBHOOK_URL: ${{ secrets.mattermost_webhook_url }}